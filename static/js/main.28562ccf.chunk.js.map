{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","servises/pictures-api.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","hendleSubmit","e","preventDefault","props","onSubmit","setState","hendleChange","currentTarget","value","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGallery","children","onPictureClick","onClick","ImageGalleryItem","data","map","id","webformatURL","largeImageURL","tags","src","alt","modalpicture","Button","searchQuery","currentPage","axios","get","then","res","hits","modalRoot","document","querySelector","Modal","handleKeyDown","code","onModalclick","handleBackDropClick","event","target","window","addEventListener","removeEventListener","createPortal","imageUrl","App","pictures","isLoading","error","showModal","modalPictureUrl","toggleModal","onChangeQuery","fetchPictures","options","picturesApi","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","onLoadMoreBtnClick","onWebPictureClick","largePicture","getAttribute","prevProps","shouldRenderLoadMoreButton","length","alert","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28562ccf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './index.css';\n\nclass Searchbar extends Component {\n  state = { query: '' };\n\n  hendleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: '' });\n  };\n\n  hendleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  // Your API key: 21316694-ed9f7523baf223edee906888b\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.hendleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.hendleChange}\n            value={this.state.query}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from 'react';\nimport './index.css';\n\nconst ImageGallery = ({ children, onPictureClick }) => {\n  return (\n    <ul className=\"ImageGallery\" onClick={onPictureClick}>\n      {children}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport './index.css';\n\nconst ImageGalleryItem = ({ data }) =>\n  data.map(({ id, webformatURL, largeImageURL, tags }) => (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        modalpicture={largeImageURL}\n      />\n    </li>\n  ));\n\nexport default ImageGalleryItem;\n","import './index.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import axios from 'axios';\n\nconst URL = 'https://pixabay.com/api';\nconst KEY = '21316694-ed9f7523baf223edee906888b&image_type=photo';\n\nconst fetchPictures = ({ searchQuery = '', currentPage = 1 }) => {\n  return axios\n    .get(\n      `${URL}/?q=${searchQuery}&page=${currentPage}&key=${KEY}&orientation=horizontal&per_page=12`,\n    )\n    .then(res => res.data.hits);\n};\n\nexport default { fetchPictures };\n","import './index.css';\nimport { createPortal } from 'react-dom';\nimport { Component } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onModalclick();\n    }\n  };\n\n  handleBackDropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onModalclick();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackDropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.imageUrl} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport picturesApi from './servises/pictures-api';\nimport Loader from 'react-loader-spinner';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  static propTypes = {};\n\n  state = {\n    pictures: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    modalPictureUrl: '',\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      pictures: [],\n      error: null,\n    });\n  };\n\n  fetchPictures = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { currentPage, searchQuery };\n\n    this.setState({ isLoading: true });\n\n    picturesApi\n      .fetchPictures(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onLoadMoreBtnClick = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  onWebPictureClick = e => {\n    const largePicture = e.target.getAttribute('modalpicture');\n\n    this.setState(() => ({\n      modalPictureUrl: largePicture,\n    }));\n\n    this.toggleModal();\n  };\n\n  render() {\n    const { pictures, isLoading, error, showModal, modalPictureUrl } =\n      this.state;\n    const shouldRenderLoadMoreButton = pictures.length > 0 && !isLoading;\n\n    return (\n      <div className=\"App\">\n        {error && alert('Please try again')}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery onPictureClick={this.onWebPictureClick}>\n          <ImageGalleryItem data={pictures} />\n        </ImageGallery>\n\n        {isLoading && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchPictures} />}\n\n        {showModal && (\n          <Modal imageUrl={modalPictureUrl} onModalclick={this.toggleModal} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}